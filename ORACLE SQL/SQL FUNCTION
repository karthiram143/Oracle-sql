-- Sql functions:
SQL functions must return values
manipulate output data
perform calculation on data
-- DUAL TABLE( pre defined table to given oralce):
 Contains one column and one row with the value X
 it can be accessed by all users in the DB
It is also called as dummy table -- 1 row , 1 column called dual table
ex: 
SELECT 1 FROM DUAL
-- result:
1-column
1- data
-- ex-2:
SELECT 1+5 FROM DUAL
-- result:
1+5
6

-- TYPE OF SQL FUNCATION
 1.Single row function 
 2.Multi row function
--  MULTI ROW FUNCATION
  Work upon group of rows and return one result for the complete set of rows
  it also as aggregate function or group function

--   SINGLE ROW function
  work on single row and return one output per row
  accept arguments and return one value
  can be used as a nested function
--   SYN:
function_name [arumnet1, argument-2]
-- type of single row function
1. General function/Null function
2.character function/ string function
3.number function
4.date function
5.conversion function

                    -- 1.NULL FUNCTION 
 Null function work with any data type
 null is. Not equal to null
 null is not equal to space or null is not a space
 null is null

--  type of null function
1.NVL FUNCTION
2.NVL2 FUNCTION
3.NULLIF FUNCTION
4.COAESE FUCNTION

1.NVL functionit accepts only two arguments if 1st argument is NULL then prints the 2nd argument
-- syn:
NVL(argumnet1, arugumnet 2)
-- ex:
select NVL(NULL,50) from dual
o/p 
50
ex-2:
select manger_id, nvl(manger_id,10) from employee

            --   2.NVL2 FUNCTION
If accepts only three arguments if 1st argument is null then prints the 3rd argument else print the 2nd argument
-- SYN:
NLV2( arugment 1, argument2,argument3)
-- ex:
SELECT NVL2(NULL,50,7) FROM DUAL
Result:7
-- ex
:select NVL2( 1,50,7) FROM DUAL
RESULT:
50
-- EX:3
SELECT DEPARTMENT_ID ,NVL2(DEPARTMENT_ID,1,0.5) FROM EMPLOYEE

                     ---3.NULLIF FUNCTION
 If accepts only two arguments if both arguments are same then prints null else prints the 1st aruguments
--  SYN:
NULIF ( argument1, argument2)
-- ex:
SELECT NULLIF(50,50) FROM DUAL
Result: NULL
-- ex:
select NULLIF( 5,50) FROM DUAL
RESULT: to print 1st arugment 
5
-- EX:4
select NULLIF( null,null) FROM DUAL -- for both argumnet we are not given the null it thorugh error(not)
select NULLIF( 50,null) FROM DUAL RESULT:50 -- for both argumnet we are given the null it thorugh error(yes)
select NULLIF( NULL,1) FROM DUAL -- for both argumnet we are NOT given the null it thorugh error(NOT)

         --    4.COALLESE FUNCTION
It print the 1st not null value it accepts (n) no of columns
-- SYN:
COALESE( arguments1,arum2 â€¦.argument(n)
-- ex:
SELECT COALESCE(NULL,NULL,NULL,50,NULL,70) FROM DUAL-- it checking one by one arugment , where is getting is not null value to show the reuslt
Result: 50


                          ---2. String function
 1. LENGTH -- used to find the length of the argument 
SYN: LENGTH (arg1)
-- EX:
Select FIRST_NAME,LENGTH(FIRST_NAME) FROM EMPLOYEE
-- RESULT:( length of the charcher a,n,t,h,o,n,y -total -7 )
FIRST_NAME	LENGTH(FIRST_NAME)
Anthony	7
Barbara	7
Barbara	7

 2. REVERSE -- used the resverse of the argument 
 SYN: REVERSE (arg1)
-- EX:
Select FIRST_NAME,REVERSE(FIRST_NAME) FROM EMPLOYEE
-- RESULT:
FIRST_NAME	REVERSE(FIRST_NAME)
Anthony	ynohtnA
Barbara	arabraB

 3. SUBSTR -- Used to get the specifics portion of the argum
SYN: SUBSTR (argument, srart_position, no of length)
-- ex:
Select FIRST_NAME,SUBSTR(FIRST_NAME,1,3) FROM EMPLOYEE
-- result:
FIRST_NAME	SUBSTR(FIRST_NAME,1,3)
Anthony	Ant
Barbara	Bar
Select FIRST_NAME,SUBSTR(FIRST_NAME,-1,3) FROM EMPLOYEE

FIRST_NAME	SUBSTR(FIRST_NAME,-1,3)
Anthony	y
Barbara	a

  4.INSTR
Used to get the exact position of the arguments
always returns a numeric values
if searching string is not found then it will return0
if string is NULL or teaching string is NULL, then it will return null
-- SYN:
INSTR ( argument , seaching_string, starting position, nth aprrerance)
EX:
SELECT FIRST_NAME, INSTR(FIRST_NAME,'n',1,1) from employee
FIRST_NAME	INSTR(FIRST_NAME,'N',1,1)
Anthony	2
Barbara	0
Barbara	0
-- explanination:Anthony is check n letter check where is 1st is straring and after 1 is 1st come of n if i am giveing to 2 means values is deffert
SELECT FIRST_NAME, INSTR(FIRST_NAME,'n',1,2) from employee
FIRST_NAME	INSTR(FIRST_NAME,'N',1,2) - 6th position is coming that place only 2nd n is there so
Anthony	6
ex: SELECT FIRST_NAME, INSTR(NULL,'n',1,2) from employee---if the argumnet has been null the full thing has been null
RESULT:
FIRST_NAME	INSTR(NULL,'N',1,2)
Anthony	-
Barbara	-
EX2:  SELECT FIRST_NAME, INSTR(FIRST_NAME,NULL,1,2) from employee-- i for the seraching string is null the full thing has been null

 
  4.REPLACE
Used to replace the charter with another set of characters
-- SYN:
 REPLACE ( argument , replace_what, replace_with)
-- EX:
SELECT FIRST_NAME, REPLACE(FIRST_NAME,'n','X') from employee
FIRST_NAME	REPLACE(FIRST_NAME,'N','X')
Anthony	AXthoXy
Barbara	Barbara

  5.TRANSLATE
  used to translate the chartered with another set of characters 
  -- SYN:
 TRANSLATE ( argument , translate_what, translate_with)
--  EX:
SELECT  TRANSLATE('ABCDE','AB',12) from dual
o/p:12CDE
SELECT  TRANSLATE('ABCDEBSCA','AB',12) from dual
RESULT: 12CDE2SC1
1. SELECT  TRANSLATE('ABCDE','AB',123) from dual. --12CDE -- HERE INNORE THE 3 it translate 1,2
2. SELECT  TRANSLATE('ABCDE','AB',1) from dual 1CDE -- HERE i am not provide the B to translae so for the it remove the B for the stirng
